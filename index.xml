<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Introduction on Visual Computing</title><link>https://ncontrerasn.github.io/cv/</link><description>Recent content in Introduction on Visual Computing</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://ncontrerasn.github.io/cv/index.xml" rel="self" type="application/rss+xml"/><item><title>Creating a New Theme</title><link>https://ncontrerasn.github.io/cv/posts/creating-a-new-theme/</link><pubDate>Sun, 28 Sep 2014 00:00:00 +0000</pubDate><guid>https://ncontrerasn.github.io/cv/posts/creating-a-new-theme/</guid><description>Introduction # This tutorial will show you how to create a simple theme in Hugo. I assume that you are familiar with HTML, the bash command line, and that you are comfortable using Markdown to format content. I&amp;rsquo;ll explain how Hugo uses templates and how you can organize your templates to create a theme. I won&amp;rsquo;t cover using CSS to style your theme.
We&amp;rsquo;ll start with creating a new site with a very basic template.</description></item><item><title>Migrate to Hugo from Jekyll</title><link>https://ncontrerasn.github.io/cv/posts/migrate-from-jekyll/</link><pubDate>Mon, 10 Mar 2014 00:00:00 +0000</pubDate><guid>https://ncontrerasn.github.io/cv/posts/migrate-from-jekyll/</guid><description>Move static content to static # Jekyll has a rule that any directory not starting with _ will be copied as-is to the _site output. Hugo keeps all static content under static. You should therefore move it all there. With Jekyll, something that looked like
▾ &amp;lt;root&amp;gt;/ ▾ images/ logo.png should become
▾ &amp;lt;root&amp;gt;/ ▾ static/ ▾ images/ logo.png Additionally, you&amp;rsquo;ll want any files that should reside at the root (such as CNAME) to be moved to static.</description></item><item><title>(Hu)go Template Primer</title><link>https://ncontrerasn.github.io/cv/posts/goisforlovers/</link><pubDate>Wed, 02 Apr 2014 00:00:00 +0000</pubDate><guid>https://ncontrerasn.github.io/cv/posts/goisforlovers/</guid><description>Hugo uses the excellent Go html/template library for its template engine. It is an extremely lightweight engine that provides a very small amount of logic. In our experience that it is just the right amount of logic to be able to create a good static website. If you have used other template systems from different languages or frameworks you will find a lot of similarities in Go templates.
This document is a brief primer on using Go templates.</description></item><item><title>Getting Started with Hugo</title><link>https://ncontrerasn.github.io/cv/posts/hugoisforlovers/</link><pubDate>Wed, 02 Apr 2014 00:00:00 +0000</pubDate><guid>https://ncontrerasn.github.io/cv/posts/hugoisforlovers/</guid><description>Step 1. Install Hugo # Go to Hugo releases and download the appropriate version for your OS and architecture.
Save it somewhere specific as we will be using it in the next step.
More complete instructions are available at Install Hugo
Step 2. Build the Docs # Hugo has its own example site which happens to also be the documentation site you are reading right now.
Follow the following steps:</description></item><item><title/><link>https://ncontrerasn.github.io/cv/docs/equipo/esgonzalezca/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ncontrerasn.github.io/cv/docs/equipo/esgonzalezca/</guid><description>Sergio Gonzalez # Estudiante de novena matrícula. Cursando el semestre final de materias. El siguiente será como pasante.
Pasatiempos # Tocar el piano, jugar Ultimate y bailar cuando es posible. Odio estar encerrado y me gusta salir con amigos.
Experiencias con los leguajes usados en la materia # Gran conocimiento en Java como lenguaje de programacion de Backend. Conocimiento en JavaScript en el uso de frameworks de desarrollo web.</description></item><item><title/><link>https://ncontrerasn.github.io/cv/docs/equipo/jreinza/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ncontrerasn.github.io/cv/docs/equipo/jreinza/</guid><description>Juan Sebastian Reina # Estudiante de novena matricula, conocimiento de algunas funcionalidades de la libreria OpenCV para manipulacion de imagenes respecto a computacion visual.
Pasatiempos # Tocar la guitarra, videojuegos retro, resolver problemas de programacion y el futbol freestyle
Experiencias con los lenguajes usados en la materia # Conocimiento en el lenguaje Java uso de librerias como javaFX y swing,y muy poco de Javascript.
Ilusión de Movimiento Periferico # Esta ilusion se basa en la impresion del movimiento aparente en espacios perifericos de vista, esta apoyada en el uso de colores claros y oscuros.</description></item><item><title/><link>https://ncontrerasn.github.io/cv/docs/equipo/ncontrerasn/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ncontrerasn.github.io/cv/docs/equipo/ncontrerasn/</guid><description>Nicolás Contreras # Estudainte de novena matrícula, con un fugaz acercamiento a la materia mediante Unity.
Pasatiempos # Ir al gimnasio. Cocinar. Escuchar música. Echar la siesta. Experiencias con los lenguajes usados en la materia # Java y JavaScript para el desarrollo de aplicaciones web. Processing al realizar un proyecto de la asignatura Programación Orientada a Objetos. Intereses # Desarrollo de software.</description></item><item><title/><link>https://ncontrerasn.github.io/cv/docs/equipo/semorenore/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ncontrerasn.github.io/cv/docs/equipo/semorenore/</guid><description>Sebastian Moreno Reina # Estudiante de decima matrícula, sin experiencia en la parte de computación visual más allá de frontends y algunas GUI.
Pasatiempos # Montar bicicleta Juegos de mesa Videojuegos Experiencias con los lenguajes usados en la materia # He trabajado con JS para diferentes frontends en diversos proyectos. Intereses # Dessarrollo software web Desarrollo software movil Ilusión de Zöllner # La ilusión de Zöllner fue propuesta en 1860 por el astrofísico alemán Johann Karl Friedrich Zöllner y consiste en una serie de rectas paralelas que parecen inclinarse.</description></item><item><title/><link>https://ncontrerasn.github.io/cv/docs/fotoMosaico/hardware/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ncontrerasn.github.io/cv/docs/fotoMosaico/hardware/</guid><description>HW # let theShader; let video; let planeSide = 1000; let button; let debug; let slider; let Grayimgs = new Array(10); function imgArraySortLuma(imagesArray){ let lumaMediaArray = []; let index = 0; imagesArray.forEach(function(image) { lumaMediaArray[index] = calculateLuma(image); index &amp;#43;&amp;#43;; }); bubbleSort(lumaMediaArray, imagesArray, lumaMediaArray.length); return imagesArray; } function swap(lumaArray, imagesArray, xp, yp){ var temp = lumaArray[xp]; lumaArray[xp] = lumaArray[yp]; lumaArray[yp] = temp; var temp2 = imagesArray[xp]; imagesArray[xp] = imagesArray[yp]; imagesArray[yp] = temp2; } // An optimized version of Bubble Sort function bubbleSort(lumaArray, imagesArray, n){ var i, j; for (i = 0; i &amp;lt; n - 1; i&amp;#43;&amp;#43;){ for (j = 0; j &amp;lt; n - i - 1; j&amp;#43;&amp;#43;){ if (lumaArray[j] &amp;lt; lumaArray[j &amp;#43; 1]) swap(lumaArray, imagesArray, j, j &amp;#43; 1); } } } function calculateLuma(image){ var sum = 0; image.</description></item><item><title/><link>https://ncontrerasn.github.io/cv/docs/fotoMosaico/software/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ncontrerasn.github.io/cv/docs/fotoMosaico/software/</guid><description>SW # let img; let img2; function preload(){ img = loadImage(&amp;#39;/cv/docs/fotoMosaico/imgSW/torre.jpg&amp;#39;); } function setup() { createCanvas(1000, 706); image(img, 0, 0,width,height); } function draw(){ img.resize(1000,706); } let imgColor; let Rimgs = new Array(20); let Bimgs = new Array(20); let Gimgs = new Array(20); let Yimgs = new Array(20); let Grayimgs = new Array(20); let total = 0; //CARACTERISTICAS DE LA IMAGEN PRINCIPAL let MainImgName = &amp;#34;londres&amp;#34;; let MainImgX = 1000; let MainImgY = 666; let pixelSize = 5; let pixel; let slider; let showPixel; //FUNCION PARA RETORNAR EL INDICE DE LA IMAGEN A UTILIZAR SEGUN SU BRILLO function brightlevel(S) { if (S&amp;lt;0.</description></item><item><title/><link>https://ncontrerasn.github.io/cv/docs/rendering/algoritmo_rasterizaci%C3%B3n/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ncontrerasn.github.io/cv/docs/rendering/algoritmo_rasterizaci%C3%B3n/</guid><description>Algoritmo del punto medio para circunferencias # p5-global-iframe markdown {{&amp;lt; p5-global-iframe id=&amp;#34;Algoritmo del punto medio para circunferencias&amp;#34; width=&amp;#34;420&amp;#34; height=&amp;#34;405&amp;#34; &amp;gt;}} var p, x, y, r, ans=false, bandera = false; function setup() { createCanvas(370, 380); background(255) slider = createSlider(20, 150, 100); slider.position(20, 20); r=slider.value(); translate(200,200) strokeWeight(2) valueDisplayer = createP() valueDisplayer.position(160, 0) button2 = createButton(&amp;#39;Dibujar&amp;#39;); button2.position(25,50); button2.mousePressed(resetSketch) } function resetSketch(){ strokeWeight(0) rect(-150, -150, 501, 501); strokeWeight(2) bandera = false ans = false updateValue() loop() } function draw() { valueDisplayer.</description></item><item><title/><link>https://ncontrerasn.github.io/cv/docs/rendering/algoritmo_visibilidad/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ncontrerasn.github.io/cv/docs/rendering/algoritmo_visibilidad/</guid><description>Algoritmo de visibilidad: Partición Binaria del Espacio: # Es un método para subdividir recursivamente un espacio en elementos convexos empleando hiperplanos. Esta subdivisión da como resultado a una representación de la escena mediante una estructura de datos árbol conocido como el arbol de partición binaria del espacio, este algoritmo surge dada la necesidad de ordenar las primitivas que se desean dibujar de forma eficiente determinando cuáles son las que están delante y detrás de otras, lo cual optimiza el proceso de renderizado.</description></item></channel></rss>