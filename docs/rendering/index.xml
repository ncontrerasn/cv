<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Visual Computing</title><link>https://ncontrerasn.github.io/cv/docs/rendering/</link><description>Recent content on Visual Computing</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://ncontrerasn.github.io/cv/docs/rendering/index.xml" rel="self" type="application/rss+xml"/><item><title/><link>https://ncontrerasn.github.io/cv/docs/rendering/algoritmo_rasterizaci%C3%B3n/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ncontrerasn.github.io/cv/docs/rendering/algoritmo_rasterizaci%C3%B3n/</guid><description>Algoritmo del punto medio para circunferencias # p5-global-iframe markdown {{&amp;lt; p5-global-iframe id=&amp;#34;Algoritmo del punto medio para circunferencias&amp;#34; width=&amp;#34;420&amp;#34; height=&amp;#34;405&amp;#34; &amp;gt;}} var p, x, y, r, ans=false, bandera = false; function setup() { createCanvas(370, 380); background(255) slider = createSlider(20, 150, 100); slider.position(20, 20); r=slider.value(); translate(200,200) strokeWeight(2) valueDisplayer = createP() valueDisplayer.position(160, 0) button2 = createButton(&amp;#39;Dibujar&amp;#39;); button2.position(25,50); button2.mousePressed(resetSketch) } function resetSketch(){ strokeWeight(0) rect(-150, -150, 501, 501); strokeWeight(2) bandera = false ans = false updateValue() loop() } function draw() { valueDisplayer.</description></item><item><title/><link>https://ncontrerasn.github.io/cv/docs/rendering/algoritmo_visibilidad/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ncontrerasn.github.io/cv/docs/rendering/algoritmo_visibilidad/</guid><description>Algoritmo de visibilidad: Partición Binaria del Espacio: # Es un método para subdividir recursivamente un espacio en elementos convexos empleando hiperplanos. Esta subdivisión da como resultado a una representación de la escena mediante una estructura de datos árbol conocido como el arbol de partición binaria del espacio, este algoritmo surge dada la necesidad de ordenar las primitivas que se desean dibujar de forma eficiente determinando cuáles son las que están delante y detrás de otras, lo cual optimiza el proceso de renderizado.</description></item></channel></rss>