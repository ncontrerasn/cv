<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Visual Computing</title><link>https://ncontrerasn.github.io/cv/docs/fotoMosaico/</link><description>Recent content on Visual Computing</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://ncontrerasn.github.io/cv/docs/fotoMosaico/index.xml" rel="self" type="application/rss+xml"/><item><title/><link>https://ncontrerasn.github.io/cv/docs/fotoMosaico/hardware/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ncontrerasn.github.io/cv/docs/fotoMosaico/hardware/</guid><description>HW # let theShader; let video; let planeSide = 1000; let button; let debug; let slider; let Grayimgs = new Array(10); function preload(){ // load the shader theShader = loadShader(&amp;#39;/cv/docs/fotoMosaico/texture.vert&amp;#39;,&amp;#39;/cv/docs/fotoMosaico/texture.frag&amp;#39;); video = createVideo(&amp;#34;/cv/docs/fotoMosaico/picnic.mp4&amp;#34;); var k = 0; for (let i=0; i&amp;lt;15; i&amp;#43;&amp;#43;){ Grayimgs[k] = loadImage(&amp;#34;/cv/docs/fotoMosaico/imgHW/&amp;#34;&amp;#43;(i&amp;#43;1)&amp;#43;&amp;#34;.jpg&amp;#34;); k = k &amp;#43; 1; } } function setup() { // shaders require WEBGL mode to work createCanvas(1000, 1000, WEBGL); textureMode(NORMAL); video.</description></item><item><title/><link>https://ncontrerasn.github.io/cv/docs/fotoMosaico/software/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://ncontrerasn.github.io/cv/docs/fotoMosaico/software/</guid><description>SW # let img; let img2; function preload(){ img = loadImage(&amp;#39;/cv/docs/fotoMosaico/imgSW/torre.jpg&amp;#39;); } function setup() { createCanvas(1000, 706); image(img, 0, 0,width,height); } function draw(){ img.resize(1000,706); } let imgColor; let Rimgs = new Array(20); let Bimgs = new Array(20); let Gimgs = new Array(20); let Yimgs = new Array(20); let Grayimgs = new Array(20); let total = 0; //CARACTERISTICAS DE LA IMAGEN PRINCIPAL let MainImgName = &amp;#34;londres&amp;#34;; let MainImgX = 1000; let MainImgY = 666; let pixelSize = 5; let pixel; let slider; let showPixel; //FUNCION PARA RETORNAR EL INDICE DE LA IMAGEN A UTILIZAR SEGUN SU BRILLO function brightlevel(S) { if (S&amp;lt;0.</description></item></channel></rss>